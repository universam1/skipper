{
    "aud": "asdeh",
    "iss": "https://login.example.jw.org/adfs",
    "iat": 1580218665,
    "exp": 1580222265,
    "auth_time": 1580214033,
    "mfa_auth_time": 1580214050,
    "sub": "50Nz/bwMfnr5iwPCfasdfm18N+MoTsrqg3wcM9E=",
    "upn": "john@example.jw.org",
    "unique_name": "EXAMPLE\\JOHN",
    "pwd_exp": "53973154",
    "sid": "S-1-5-21-1457802334-1765146877-2090458765-20401",
    "groups": [
        "Domain Users",
        "EXAMPLE-APP-Perfmon",
        "XLC-Users",
        "RTL-CD-SCOMReadOnlyOperators",
        "TWQ-WEB-ExampleDomainMediaWikiUsers-CHANGE",
        "SmartCardUsers",
        "EXAMPLE-FILE-CDTSLProducts-READ",
        "EXAMPLE-FILE-CDTSLProducts-CHANGE",
        "EXAMPLE-EXCH-ActiveSync",
        "XLC-EXCH-ActiveSync",
        "DEPTCDSupportCHANGE",
        "RTL-APP-MicrosoftLync2010Attendee",
        "RTL-APP-MicrosoftLync2010GroupChatClient",
        "XLC-EXCH-InternetEmail",
        "EXAMPLE-CD-SCCMUsers",
        "RTL-APP-PDFCombineUtility",
        "EXAMPLE-CD-NetScalerReadOnlyAdmins2",
        "XLC-FILE-AppsTotalCmd-READ",
        "XLC-FILE-AppsWarenVZA-READ",
        "XLC-FILE-AppsSageOL-READ",
        "XLC-CD-SCCMReadOnlyAnalysts",
        "XLC-HID-Transfer",
        "XLC-FILE-HIDTransfer-CHANGE",
        "IBX-InboxCDFax.FY",
        "IBX-InboxCDSICartridge.FY",
        "IBX-InboxCDHardware.FY",
        "IBX-InboxCDSIMonNet.FY",
        "IBX-InboxCDSIMonNT.FY",
        "IBX-InboxCDSupport.FY",
        "XLC-APP-DEPRT002WebJetAdminSupport-FULL",
        "XLC-CD-Department",
        "XLC-CD-Everyone",
        "XLC-CD-ScanToFolder",
        "XLC-CD-Support",
        "XLC-CD-SupportEveryone",
        "XLC-CD-WebPrjAutoren",
        "XLC-FILE-Apps_Config-READ",
        "XLC-FILE-AppsKestnerDGS-READ",
        "XLC-FILE-AppsMEPS-READ",
        "XLC-FILE-AppsOfficeClipArts-READ",
        "XLC-FILE-AppsResearch_Examplefamily-READ",
        "XLC-FILE-AppsResearch-READ",
        "XLC-FILE-AppsTemplates-READ",
        "XLC-FILE-AppsUtilCD-READ",
        "XLC-FILE-AppsUtil-READ",
        "XLC-FILE-AppsWTPub-READ",
        "XLC-FILE-CD-READ",
        "XLC-FILE-CDScanToFolder-CHANGE",
        "XLC-FILE-HID-READ",
        "XLC-FILE-MNT-SAFETYGefahrstoffAbteilungen-READ",
        "XLC-FILE-MNT-SAFETYGefahrstoffSDB-READ",
        "XLC-FILE-MNT-SAFETY-READ",
        "XLC-FILE-MNT-SAFETYSicherheitAbteilungen-READ",
        "XLC-FILE-AppsFormat-READ",
        "XLC-FILE-AppsPlot-CHANGE",
        "XLC-FILE-AppsWDCS-READ",
        "XLC-FILE-AppsWebTemplates-READ",
        "XLC-FILE-FN-READ",
        "XLC-FN-PhotosFamilyDay",
        "XLC-GEN-JrTwQUser",
        "XLC-GEN-ClientOfferRemoteAssistance",
        "XLC-GEN-Everyone",
        "XLC-MNT-SAFETY-SafetyDataSheets",
        "XLC-PRNTOFF-WebPrjPrinterySchedule",
        "XLC-SQL-PRD-JrTwQ-JrTwQLogin",
        "XLC-SQL-PRD-JrTwQ-WEBCurrentAssignments",
        "XLC-SQL-PRD-JrTwQ-WEBpublic",
        "XLC-SQL-PRD-AdminDE-LBPublicationIndexedForWebview",
        "XLC-ACCT-WebPrjDeptAccounts",
        "XLC-WEB-PRD-AppsF_Countries-READ",
        "XLC-WEB-PRD-AppsTDDeptAccounts-READ",
        "XLC-WEB-PRD-CDPrivate-READ",
        "XLC-WEB-PRD-CDTrainingPrjAuthorsBasis-READ",
        "XLC-WEB-PRD-FAPrjScheduleBasis-READ",
        "XLC-WEB-PRD-TDPrjDeptAccountsBasis-READ",
        "XLC-WEB-PRD-wwwroot-LIST",
        "XLC-WEB-PRD-wwwroot-READ",
        "RTL-APP-OrbitProduction",
        "EXAMPLE-RA-JSA",
        "IBX-InboxCDERD.FY",
        "XLC-FILE-AppsResearchLibraryUsers-CHANGE",
        "XLC-CD-ERD",
        "RTL-APP-ScrollJarCD-READ",
        "EXAMPLE-SP-PPDPrintingPressroom-Read",
        "EXAMPLE-SP-PPDPrintingBindery-Read",
        "EXAMPLE-SP-PPDTranslationComputerSupport-Read",
        "EXAMPLE-SP-PPDSoftwareDownloads-Read",
        "EXAMPLE-SP-PPDSoftwareSurveys-Contribute",
        "EXAMPLE-SP-PPDPrinting-Read",
        "EXAMPLE-SP-PPDPrintingGraphics-Read",
        "EXAMPLE-SP-PPDPrintingColorManagement-Read",
        "EXAMPLE-SP-PPDPrintingShipping-Read",
        "EXAMPLE-PPF-PublicationProcessingSites-Contribute",
        "XLC-RA-JSA",
        "EXAMPLE-CD-RTCAPPVidConfAdmins",
        "RTL-APP-MicrosoftSystemCenter2012-OperationsManagerConsole",
        "XLC-FILE-GeneralMNT-CD-CHANGE",
        "XLC-GEN-SurfaceUserEveryone",
        "XLC-GEN-ExampleIntranet",
        "XLC-FILE-DeptTransferBRDCST-CHANGE",
        "EXAMPLE-PPF-BranchSupportInstallationMaintenance-Contribute",
        "EXAMPLE-PPF-BranchSupportRequestsMDS-Contribute",
        "EXAMPLE-CD-SupportApplicationServices",
        "XLC-GEN-ShareFileEveryone",
        "XLC-FILE-AppsInventorInstall-READ",
        "XLC-FILE-AppsInventorRef-READ",
        "XLC-FILE-AppsUPSWorldship-CHANGE",
        "XLC-SQL-PRD-GLT_PROD-GetWeatherData",
        "EXAMPLE-CD-Everyone",
        "RTL-CD-PatchManagementChat",
        "XLC-WEB-PRD-BRMDevicesChange",
        "EXAMPLE-CD-SCCMReportUsers",
        "EXAMPLE-CD-AnalyticsAdmins",
        "EXAMPLE-SP-PPDBroadcasting-Read",
        "XLC-APP-ScrollJarCD-READ",
        "IBX-InboxCDApplicationServices.US",
        "RTL-FILE-MEPSInterDept-Change",
        "DEPTBSRV4ISDeptMEPSCSERVEREAD",
        "DEPTBSRV4ISDeptMEPSInterDeptCHANGE",
        "DEPTBSRV4ISDeptMEPSLIST",
        "MEPSUSFILE030READ",
        "EXAMPLE-FILE-CDSupport-CHANGE",
        "RTL-SQL-QA-JrTwQ-zzRTLBTLWEBTimeAwayPublicUser",
        "EXAMPLE-WEB-PRD-BRMDevicesChange",
        "RTL-CD-MACAuthentication",
        "EXAMPLE-GEN-ALLCommitteesAndCDs",
        "RTL-SQL-DEV-msdb-SQLAgentReaderRole",
        "RTL-SQL-DEV-SI-dbo",
        "RTL-SQL-DEV-JrTwQSupport-Datareader",
        "RTL-SQL-DEV-JrTwQ-zzRTLBTLWEBTimeAwayPublicUser",
        "RTL-EXCH-MailToCDBranches",
        "RTL-SQL-QA-ExampleServices-ExampleDirectory",
        "RTL-SQL-QA-ExampleServices-Public",
        "RTL-SQL-QA-msdb-SQLAgentReaderRole",
        "RTL-SQL-QA-VolAdminXD-public",
        "RTL-SQL-QA-Workflow01-Reporting",
        "RTL-FILE-DAPPPSRV2Staefa-CHANGE",
        "RTL-WEB-DEV-WHQCDSRVReporting",
        "RTL-WEB-PRD-AppSupportAssignments-READ",
        "RTL-WEB-PRD-AppsVAXExplorer-READ",
        "RTL-WEB-PRD-AppsWebFolderAdmin-READ",
        "RTL-WEB-PRD-MedicalServicesPrivateHIPAADepartmentPolicies-READ",
        "RTL-WEB-PRD-RecordsManagementPrivateComputerDepartment-READ",
        "RTL-WEB-PRD-RecordsManagementPrivateHeadquartersOffices-READ",
        "RTL-WEB-PRD-RecordsManagementPrivateInformationSystems-READ",
        "RTL-WEB-PRD-WorkflowService-READ",
        "RTL-WEB-PRD-WorkflowServiceUs-READ",
        "RTL-FILE-DAPPBSRV2BICSINDRM-CHANGE",
        "RTL-FILE-DAPPBSRV2BICSITDMM-CHANGE",
        "RTL-FILE-DAPPBSRV2IconExperience-READ",
        "RTL-FILE-DAPPBSRV2IconShockLibrary-READ",
        "RTL-SQL-PRD-FindIt-datareader",
        "RTL-SQL-PRD-msdb-SQLAgentReaderRole",
        "RTL-SQL-PRD-VolAdminXD-public",
        "RTL-SQL-PRD-Workflow01-ISEveryone",
        "RTL-SQL-PRD-Workflow01-Reporting",
        "RTL-APP-AdminInfo",
        "RTLCOMVAXExplorerPrdVolAdminXDRead",
        "RTLCOMVAXExplorerQAVolAdminXDRead",
        "RTLCOMPrdDocNetISAppsRead",
        "WHQ-MEPS-InterDept",
        "RTL-FILE-DEPTUSSRV071IS-LIST",
        "EXAMPLE-CD-OrbitSupport",
        "RTL-APP-MicrosoftVisioProfessional2010",
        "EXAMPLE-APP-CDRedmine",
        "RTL-MED-OTrainingHIPAA",
        "WHQ-ART-APPSAccess",
        "WHQ-ART-DEPTGENERALTransfer",
        "WHQ-ART-TransferCD",
        "WHQ-ART-TRMSRVART",
        "RTL-FILE-DEPTUSSRV071ISTmpImage7Day-CHANGE",
        "RTL-FILE-DEPTUSSRV071ISTmpImage-LIST",
        "RTL-FILE-DEPTCDSupport-Change",
        "RTL-FILE-DEPTBSRV2ISSupport-LIST",
        "RTL-FILE-DEPTBSRV2ISSupportOversightSLA-Read",
        "RTL-FILE-DEPTBSRV2ISSupport-Read",
        "RTL-FILE-DEPTPSRV2ISSupport-LIST",
        "RTL-FILE-DEPTPSRV2ISSupport-Read",
        "RTL-APP-BMON1FindIt-READ",
        "RTL-CD-Support",
        "RTL-CD-SupportBRK",
        "RTL-CD-SupportOversightSLA",
        "RTL-CD-TRMSRVPurchasing",
        "RTL-CD-TRMSRVTreasurersOffice",
        "RTL-FILE-DEPTBSRV2GeneralWTISCommonAuths-CHANGE",
        "RTL-FILE-DEPTBSRV2GENWTISCommonBatJobs",
        "RTL-FILE-DEPTBSRV2ISGeneralFireSafety-READ",
        "RTL-FILE-DEPTBSRV2ISGeneralScriptedWork-CHANGE",
        "RTL-FILE-DEPTCD-LIST",
        "EXAMPLE-CD-PatchManagement",
        "RTL-APP-PHPNagios-Operator",
        "RTL-APP-PHPNagios-Subscriber",
        "WHQ-APP-Admin-PRD",
        "RTL-APP-Admin-PRD",
        "RTL-CD-Everyone",
        "RTL-CD-EveryoneBRK",
        "RTL-CD-InmonUsers",
        "RTL-CD-DraftSNContacts",
        "RTLCOMDevDocNetISAppsRead",
        "RTLCOMDevDocNetMaintenanceRead",
        "RTLCOMDevDocNetPrinteryRead",
        "RTL-APP-ExampleDirectory",
        "RTL-APP-ExampleDirectoryAvailability",
        "RTL-APP-GroupChatPatchManagement",
        "RTL-APP-OPMgrUsers",
        "RTL-APP-OrbitUser",
        "RTL-APP-PerfMon",
        "RTL-APP-TimeAwayQAPublic",
        "RTL-APP-rainSched-READ",
        "RTL-APP-VidConfAdmin",
        "RTL-APP-WaveTraining",
        "RTL-APP-Workflow01User",
        "RTL-APP-Workflow99User",
        "RTL-SQL-PRD-SI-DBO",
        "RTL-SQL-PRD-SMSDataReader",
        "RTL-SQL-PRD-SMSUS1Datareader",
        "RTL-FILE-DAPPBSRV2TIA-CHANGE",
        "RTL-FILE-DAPPBSRV2WTApps-READ",
        "RTL-FILE-DEPTBSRV2ISAppsAPPVidConf-CHANGE",
        "RTL-FILE-DEPTBSRV2ISAppsInterDeptWorkflow-CHANGE",
        "RTL-FILE-DEPTBSRV2ISAppsInterDeptWorkflow-READ",
        "RTL-FILE-DEPTBSRV2ISAPPS-LIST",
        "RTL-FILE-DEPTPSRV2ISCommon-CHANGE",
        "RTL-FILE-DEPTPSRV2IS-LIST",
        "RTL-FILE-DEPTPSRV2ISProjects3Site-CHANGE",
        "RTL-FILE-DEPTUSSRV071ISCommon-CHANGE",
        "RTL-CD-SupportApplicationServices",
        "RTL-CD-SupportApplicationServicesBranches",
        "EXAMPLE-CD-OrchestrationAdmins",
        "TWQ-APP-Scrolljar-Install",
        "IBX-InboxCDMobileSupport.FY",
        "RTL-CD-AppsAdminSupportForumUsers",
        "RTL-FILE-DEPTCDSupport-READ",
        "XLC-GEN-IntranetPersonalServices",
        "XLC-FILE-GeneralSHIPSupport-CHANGE",
        "Linux-Users",
        "EXAMPLE-PPF-BranchSupport-Read",
        "EXAMPLE-PPF-BranchSupportPrinting-Read",
        "EXAMPLE-PPF-BranchSupportPrintingBindery-Contribute",
        "EXAMPLE-PPF-BranchSupportPrintingGraphics-Contribute",
        "EXAMPLE-PPF-BranchSupportPrintingPressroom-Contribute",
        "EXAMPLE-PPF-BranchSupportPrintingShipping-Contribute",
        "EXAMPLE-PPF-BranchSupportPrintingScheduling-Contribute",
        "EXAMPLE-PPF-BranchSupportRequests-Read",
        "EXAMPLE-PPF-PublicationProcessingSites-Read",
        "RTL-FILE-DEPTBSRV2ISAppsInterDept-READ",
        "RTL-FILE-DEPTBSRV2ISAppsInterDept-CHANGE",
        "RTL-FILE-DEPTBSRV2ISAppsInterDept-LIST",
        "WHQ-PRD-Orbit-PersonProfileReport",
        "EXAMPLE-CD-TORVSupport",
        "EXAMPLE-APP-MNTRedmine",
        "RTL-FILE-DEPTCDGeneralProDFS-CHANGE",
        "RTL-FILE-AppsAdminClientRepository-READ",
        "WHQ-FILE-AppsAdminClientRepository-READ",
        "XLC-Users-CONVSPEAKER",
        "XLC-Users-ELDER",
        "XLC-Users-BBR",
        "XLC-APP-CDRedmine-Technician",
        "XLC-TRANS-AudioRecExchange",
        "XLC-FILE-TRANSAudioRecExchange-READ",
        "XLC-RDS-DERDSCL001-USR",
        "XLC-RDS-DERDS010-USR",
        "XLC-APP-MNTRedmine-Viewer",
        "XLC-WEB-CD-Private",
        "XLC-FILE-AppsAdobePSColorProfiles-READ",
        "XLC-FILE-AppsLocalDeployments-READ",
        "XLC-FILE-AppsLog-READ",
        "XLC-CD-LocalEveryone",
        "XLC-MNT-SAFETY-CDSupport",
        "XLC-FILE-AppsSimarisDesign-READ",
        "XLC-ENG-Transfer",
        "XLC-CD-NFormServerRDPUser",
        "EXAMPLE-APP-Racktables",
        "EXAMPLE-CD-AllBranchServerAdmins",
        "RTL-CD-AppsJWOrgAlerts",
        "EXAMPLE-RA-PulseSecurePortal",
        "IBX-CfRm-XLC-PRN-2O-ComputerTrainingEast",
        "FIN-CD-ServerAdmins",
        "EXAMPLE-CD-IPAMOperators",
        "RTL-FILE-DEPTCDGeneralWarwick-CHANGE",
        "RTL-APP-MicrosoftTeams",
        "RTL-RDS-USRDS044-XenApp",
        "EXAMPLE-Users-ELDER",
        "EXAMPLE-APP-O365-ADVANCED",
        "IBX-InboxCDOrchestration.US",
        "EXAMPLE-APP-O365-MSTEAMSADVANCED",
        "RTL-RDS-USRDSCL002-USR",
        "RTL-FILE-TSLTrainingCDMeetings",
        "EXAMPLE-FILE-MEPSPPFFileTransfer-READ",
        "EXAMPLE-FILE-MEPSPPFFileTransferPPSites-CHANGE",
        "EXAMPLE-FILE-MEPSPPFFileTransferBranchSupport-CHANGE",
        "EXAMPLE-ADFS-MFAEnabledUsers",
        "EXAMPLE-CD-RacktablesUsers",
        "XLC-FILE-CDSupport-CHANGE",
        "XLC-FILE-CDCommon-CHANGE",
        "XLC-FILE-CDApplications-CHANGE",
        "XLC-FILE-CDEngineering-CHANGE",
        "EXAMPLE-CD-IPAMReadonlyUsers",
        "RTL-FILE-DEPTCDGeneral-READ",
        "WHQ-MEPS-PackageReadersShared",
        "EXAMPLE-PKI-MobileWorkersExportTemplate",
        "XLC-RDS-SHADOW-USR",
        "EXAMPLE-SP-CDEscalationList-Read",
        "XLC-FILE-AppsADMINTemplates-CHANGE",
        "RTCUniversalGlobalReadOnlyGroup",
        "RTCUniversalServerReadOnlyGroup",
        "RTCUniversalUserReadOnlyGroup",
        "RTCUniversalReadOnlyAdmins"
    ],
    "apptype": "Confidential",
    "appid": "asdeh",
    "authmethod": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
    "ver": "1.0",
    "scp": "profile openid"
}